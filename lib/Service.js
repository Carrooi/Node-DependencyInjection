// Generated by CoffeeScript 1.6.3
(function() {
  var Service;

  Service = (function() {
    Service.prototype.di = null;

    Service.prototype.service = null;

    Service.prototype["arguments"] = null;

    Service.prototype.instantiate = true;

    Service.prototype.autowired = true;

    Service.prototype.injectMethods = true;

    Service.prototype.setup = null;

    Service.prototype.instance = null;

    function Service(di, service, _arguments) {
      this.di = di;
      this.service = service;
      this["arguments"] = _arguments != null ? _arguments : [];
      this.setup = {};
    }

    Service.prototype.getInstance = function() {
      if (this.instance === null) {
        this.instance = this.create();
      }
      return this.instance;
    };

    Service.prototype.create = function() {
      var args, method, service, _ref;
      service = this.service;
      if (Object.prototype.toString.call(service) === '[object String]') {
        service = require(service);
      }
      service = this.di.createInstance(service, this["arguments"], this.instantiate, this.injectMethods);
      _ref = this.setup;
      for (method in _ref) {
        args = _ref[method];
        if (this.setup.hasOwnProperty(method)) {
          if (typeof service[method] === 'function') {
            service[method].apply(service, this.di.autowireArguments(service[method], args));
          } else {
            service[method] = args;
          }
        }
      }
      return service;
    };

    Service.prototype.addSetup = function(method, args) {
      if (args == null) {
        args = [];
      }
      this.setup[method] = args;
      return this;
    };

    Service.prototype.setInstantiate = function(instantiate) {
      this.instantiate = instantiate;
      return this;
    };

    Service.prototype.setAutowired = function(autowired) {
      this.autowired = autowired;
      return this;
    };

    return Service;

  })();

  module.exports = Service;

}).call(this);
