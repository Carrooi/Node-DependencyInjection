// Generated by CoffeeScript 1.6.3
(function() {
  var DI, DIConfigurator, configurator, di, dir, expect, path;

  expect = require('chai').expect;

  path = require('path');

  DI = require('../../lib/DI');

  DIConfigurator = require('../../lib/DIConfigurator');

  dir = path.resolve(__dirname + '/../data');

  di = null;

  configurator = null;

  describe('DIConfiguration', function() {
    beforeEach(function() {
      configurator = new DIConfigurator(dir + '/config.json');
      di = configurator.create();
      return di.basePath = dir;
    });
    describe('#parameters', function() {
      return it('should contain all parameters', function() {
        return expect(di.parameters).to.be.eql({
          language: 'en',
          users: {
            david: '123456',
            admin: 'nimda'
          },
          database: {
            user: 'admin',
            password: 'nimda'
          }
        });
      });
    });
    return describe('#getParameter()', function() {
      it('should throw an error if di object was not created from DIConfigurator', function() {
        di = new DI;
        return expect(function() {
          return di.getParameter('buf');
        }).to["throw"](Error, 'DI container was not created with DIConfigurator.');
      });
      return it('should return expanded parameter', function() {
        return expect(di.getParameter('database.password')).to.be.equal('nimda');
      });
    });
  });

}).call(this);
